{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import React from 'react';\
import MapView from 'react-native-maps';\
import Geocoder from 'react-native-geocoding';\
import \{\
  AppRegistry,\
  StyleSheet,\
  Text,\
  View \} from 'react-native';\
\
const LATIDUDE =  49.2606\
const LONGITUDE = -123.2460\
const LATITUDE_DELTA =  0.0122\
const LONGITUDE_DELTA = .0221\
// Geocoder.init('AIzaSyCvW9JtKWa3ftr-FD-bGsFqR9EBQMlGn7k'); // use a valid API key\
\
export default class App extends React.Component \{\
  constructor(props)\{\
    super(props)\
\
    this.state = \{\
      initialPosition: \{\
        latitude: LATIDUDE,\
        longitude: LONGITUDE,\
        latitudeDelta: LATITUDE_DELTA,\
        longitudeDelta: LONGITUDE_DELTA,\
      \},\
      markerPosition: \{\
        latitude: LATIDUDE,\
        longitude: LONGITUDE,\
      \}\
    \}\
  \}\
\
/*\
  componentDidMount() \{\
      navigator.geolocation.getCurrentPosition(\
        (position) => \{\
          this.setState(\{\
            region: \{\
              latitude: position.coords.latitude,\
              longitude: position.coords.longitude,\
              latitudeDelta: LATITUDE_DELTA,\
              longitudeDelta: LONGITUDE_DELTA,\
              accuracy: position.coords.accuracy\
            \}\
          \});\
        \},\
        (error) => alert(error.message),\
        \{timeout: 10000\}\
      );\
\
      this.watchID = navigator.geolocation.watchPosition((position) => \{\
        const newRegion = \{\
          latitude: position.coords.latitude,\
          longitude: position.coords.longitude,\
          latitudeDelta: LATITUDE_DELTA,\
          longitudeDelta: LONGITUDE_DELTA,\
          accuracy: position.coords.accuracy\
        \}\
        this.setState(\{newRegion\});\
      \});\
    \}\
\
    componentWillUnmount() \{\
      navigator.geolocation.clearWatch(this.watchID);\
    \}\
    */\
\
  render() \{\
    return (\
      <View style=\{styles.container\}>\
      <MapView\
        style=\{styles.map\}\
        region= \{this.state.initialPosition\}\
        showsUserLocation=\{true\}\
          followUserLocation=\{true\}>\
        <MapView.Marker\
          coordinate = \{this.state.markerPosition\}>\
            \{/* <View style=\{styles.radius\}>\
             <View style=\{styles.marker\}/>\
             </View> */\}\
           </MapView.Marker>\
        </MapView>\
\
\
      </View>\
    );\
  \}\
\}\
\
\
const styles = StyleSheet.create(\{\
  radius: \{\
    height: 50,\
    width: 50,\
    borderRadius: 50/2,\
    overflow: 'hidden',\
    backgroundColor: 'rgba(0,122,255,0.1)',\
    borderWidth: 1,\
    borderColor: 'rgba(0,122,255,0.3)',\
    alignItems: 'center',\
    justifyContent: 'center',\
  \},\
  marker: \{\
    height:20,\
    width: 20,\
    borderWidth: 3,\
    borderColor:'white',\
    borderRadius: 20/2,\
    overflow: 'hidden',\
    backgroundColor: '#007AFF',\
\
\
  \},\
  container: \{\
    flex: 1,\
    backgroundColor: '#fff',\
    alignItems: 'center',\
    justifyContent: 'center',\
  \},\
  map: \{\
    left: 0,\
    right: 0,\
    top: 0,\
    bottom: 0,\
    position: 'absolute'\
  \}\
\});\
}